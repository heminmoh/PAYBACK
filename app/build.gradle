plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}
def lifecycle_version = "2.5.0-rc01"
def arch_version = "2.1.0"
def dagger_version = "2.4"

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.payback"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        buildFeatures {
            dataBinding true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    androidExtensions {
        experimental = true
    }
    testOptions {

        testOptions {
            unitTests.includeAndroidResources = true
        }
        unitTests {
            includeAndroidResources = true
        }
    }

}

dependencies {
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    testImplementation("androidx.arch.core:core-testing:$arch_version")
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    testImplementation  'androidx.test.ext:junit:1.1.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation  'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    implementation "androidx.room:room-runtime:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13.2'

    testImplementation  'org.junit.jupiter:junit-jupiter-api:5.7.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    testImplementation 'androidx.test.ext:junit:1.1.2'

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly "org.glassfish:javax.annotation:3.1.1"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2")
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation("org.jetbrains.kotlin:kotlin-stdlib:1.6.10")
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2")
    implementation("com.android.volley:volley:1.2.0")
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    implementation 'com.google.mlkit:translate:16.1.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha01'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation 'androidx.fragment:fragment-ktx:1.1.0'
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    implementation 'com.squareup.picasso:picasso:2.8'
    // Annotation processor
    implementation("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")

    // optional - ReactiveStreams support for LiveData
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version")

    // optional - Test helpers for LiveData
    testImplementation("androidx.arch.core:core-testing:$arch_version")

    def paging_version = "3.0.0-alpha03"
    implementation "androidx.paging:paging-runtime:$paging_version"

    def nav_version = "2.3.0-alpha06"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

// Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

// Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
}
